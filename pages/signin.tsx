import type { NextPage } from 'next'
import Head from 'next/head'
import cookie from "cookie"
import Image from 'next/image'
import { useCookies } from 'react-cookie'
import { useEffect, useState } from 'react'
import getUser from '../utils/frontend/getUser'
import { useRouter } from 'next/router'

const SignIn: NextPage = () => {
    const router = useRouter();
    const [cookie, setCookie] = useCookies(["user"])
    const [username, setUsername] = useState("")
    const [password, setPassword] = useState("")

    const handleSignIn = async (username: string, password: string) => {
        try {
            if (!(username && password)) throw new Error("No username or password")

            const response = await fetch(
                `${window.location.origin}/api/auth/signin`,
                {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json",
                    },
                    body: JSON.stringify({
                        username: username,
                        password: password,
                    }),
                }
            )
            if (response.ok) {
                const data = await response.json()
                setCookie("user", JSON.stringify(Object.assign({}, data.user, {logintoken: data.logintoken})), {
                    path: "/",
                    maxAge: 1653320965, // Expires after 1 month
                    sameSite: true,
                })

                console.log(cookie)

                router.push("/dashboard")
            } else {
                console.error("Error: ", response.text())
            }
        } catch (err) {
            console.log(err)
        }
    }

    return (
        <div>
            <Head>
                <title>Sign in - TimezoneDB</title>
                <meta name="description" content="Generated by create next app" />
                <link rel="icon" href="/favicon.ico" />
            </Head>

            <h1>Creating a new user</h1>
            
            <label>
                Username:
                <input type="text" value={username} onChange={e => setUsername(e.target.value)} />
            </label>
            <label>
                Password:
                <input type="password" value={password} onChange={e => setPassword(e.target.value)} />
            </label>
            <button onClick={() => handleSignIn(username, password)}>Sign in</button>
        </div>
    )
}

SignIn.getInitialProps = async ({ req }) => {
    const data = cookie.parse(req ? req.headers.cookie || "" : document.cookie)

    return {
        data: data && data,
    }
}


export default SignIn
