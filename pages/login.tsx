import type { NextPage } from 'next'
import Head from 'next/head'
import cookie from "cookie"
import Image from 'next/image'
import { useCookies } from 'react-cookie'
import { useEffect, useState } from 'react'

const LogIn: NextPage = () => {
    const [cookie, setCookie] = useCookies(["user"])
    const [username, setUsername] = useState("")
    const [password, setPassword] = useState("")

    const handleLogIn = async (username?: string | null, password?: string | null, jwttoken?: string) => {
        try {
            let bodyRequest: any = {}
            if (jwttoken) bodyRequest["logintoken"] = jwttoken
            if (username && password) {
                bodyRequest["username"] = username
                bodyRequest["password"] = password
            }
            if (Object.keys(bodyRequest).length === 0) throw new Error("No data to send")

            const response = await fetch("http://localhost:3000/api/auth/login", {
                method: "POST",
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(bodyRequest)
            })
            if (response.ok) {
                const data = await response.json()
                console.log(data)
                setCookie("user", JSON.stringify(data), {
                    path: "/",
                    maxAge: 1653320965, // Expires after 1 month
                    sameSite: true,
                })
            } else {
                console.error("Error: ", response.statusText)
            }
        } catch (err) {
            console.log(err)
        }
    }

    useEffect(() => {
        if (cookie?.user?.logintoken) handleLogIn(null, null, cookie?.user?.logintoken)
    }, [])

    return (
        <div>
            <Head>
                <title>Login - TimezoneDB</title>
                <meta name="description" content="Generated by create next app" />
                <link rel="icon" href="/favicon.ico" />
            </Head>

            <label>
                Username:
                <input type="text" value={username} onChange={e => setUsername(e.target.value)} />
            </label>
            <label>
                Password:
                <input type="password" value={password} onChange={e => setPassword(e.target.value)} />
            </label>
            <button onClick={() => handleLogIn(username, password)}>Log in</button>
        </div>
    )
}

LogIn.getInitialProps = async ({ req }) => {
    const data = cookie.parse(req ? req.headers.cookie || "" : document.cookie)

    return {
        data: data && data,
    }
}


export default LogIn
